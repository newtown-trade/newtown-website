v0.1:[DONE]
-django project init, dev server doesn't crash on start[DONE]
-basic level implementation of JEWELRY model[DONE]
-implementation of django admin interface[DONE]
-basic list-type html output with test rows (go directly to page)[DONE]

v0.2:[DONE, BUT WON'T CREATE TAG]
-create duple options for metals[DONE]
-temporary harcoded methods for metal-specific items, with links from 'homepage'[SCRAPPED]
-create separate settings.py file for DEV[DONE]
-use environment variables to distinctuate between DEV and PROD setting.py files[DONE]
-update readme with implementation instructions up to this point[DONE]
-grab database bounds in preparation for form implementation[DONE]

v0.3:
-design proof-of-concept test frontend for metals using Algolia. (CSS details will be integrated into Django later)[DONE]
-link jewelry subhome page with metal-specific frontend[DONE]
-create Display model[DONE]
 
v0.4:
-add image column to Metal and implement on Algolia[DONE]
-create organized image filesystem [DONE]
-dev image serving configuration on django[DONE]

-link from homepage to jewelry and display, and check jewelry-> metals link[DONE]
-create specific pages for models linked via Algolia search[NEED TO MERGE IMAGE FIRST]
-comb through settings.py for dev-specific stuff[DONE]

-create Contact Lenses class[DONE,MOSTLY PUSHED TO 0.5]
-implement algolia search for Display (do not create item-specific pages)[POSTPONED FOR 0.5]

v0.5
-make Metal Algolia frontend work with Contact lense[DONE]
-generalize metals frontend to work with any jewelry [DONE]
-implement Django Template system with Algolia in general [DONE, NEEDS FRONTEN INTEGRATION]

-make contacts and displays fully operational[DONE]

-create homepage frontend[DONE]
-create jewelry homepage frontend[DONE]
-create flatpages (e.g. about us, terms of use)[POSTPONED TO 0.6]
-integrate frontend with backend[DONE]

-create a logo and attach as favicon[DONE]
-integrate UI with item-specific results[DONE]
-stylize item list better[DONE]
-get universal search working[POSTPONED FOR 0.6]
-get contact us working[DONE]
-get sign up for updates working[DONE]
-get list of most recent submissions to show on homepage[DONE]

-first release proposal to dad

v0.6
-reconstructed Django admin with ability to edit all options from Jewelry option only
	-create test setup in new app implementing InLineModelAdmin to test how things go[DONE, REJECTED]
	-DESIRED BEHAVIOR: generalized Jewelry model can shape the entire dataset of jewelry[REJECTED]
	-create new generic Jewelry model (e.g. price) and have existing modules link back to it as ForeignKey[REJECTED]
	-adapt Algolia to work with new system[REJECTED]
-Display each JEWELRY TYPE as a top header on the navbar, and each JEWELRY STYLE under JEWELRY TYPE as a suboption[DONE]
-write subhome pages for each JEWELRY TYPE that dynamically display existing jewelry styles[DONE]
integrate display into dynamic URL
-display:
	-envelop display under dynamic URL solution [DONE]
	-Link UNIFORM Displays (i.e. of the same jewelry TYPE and STYLE) with Type/Style pages
-Write generalized field details for style_specific[DONE, SEE ALGOLIA SUBPOINT]
-Algolia system to remain (mostly) intact as secondary system on topheader havbar[DONE]
	-find some way to integrate old method
-overhaul the frontend
-sitemap
-item nubmer support
